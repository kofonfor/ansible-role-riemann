; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init {:file "/var/log/riemann/riemann.log"})

(def graph (graphite {:host "{{ riemann_graphite_host }}"}))

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "0.0.0.0" graphite-port {{ riemann_graphite_port }}]
  (tcp-server {:host host})
  (udp-server {:host host})
  (graphite-server {:host host :port graphite-port})
  (ws-server  {:host host}))

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(let [index (index)]
  ; Inbound events will be passed to these streams:
  (streams
    (default :ttl 60
      ; Index all events immediately.
      index
      graph

      ; Log expired events.
      (expired
        (fn [event] (info "expired" event))))))

